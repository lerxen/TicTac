package ru.ifmo.grushitcyna;import java.util.ArrayList;import java.util.List;public class Board {    private NoughtsCrosses[][] table;    private int n;    private List<ModelObserver> observers = new ArrayList<ModelObserver>();    public Board(int n) {        table = new NoughtsCrosses[n][n];        for (int i = 0; i < n; i++) {            for (int j = 0; j < n; j++) {                table[i][j] = null;            }        }        this.n = n;    }    public int size() {        return n;    }    public NoughtsCrosses getSymbol(int i, int j) {        return table[i][j];    }    public void setSymbol(NoughtsCrosses symbol, int i, int j) {        table[i][j] = symbol;        notifyObservers();    }    public boolean winner() {        boolean find = false;        for (int i = 0; i < 19; i++) {            for (int j = 0; j < 19 - 4; j++) {                if (table[i][j] == null) {                    continue;                }                boolean find5 = true;                for (int k = 1; k < 5; k++) {                    if (table[i][j] != table[i][j + k]) {                        find5 = false;                    }                }                if (find5) {                    find = true;                    break;                }            }            if (find) {                break;            }        }        for (int i = 0; i < 19 - 4; i++) {            for (int j = 0; j < 19; j++) {                if (table[i][j] == null) {                    continue;                }                boolean find5 = true;                for (int k = 1; k < 5; k++) {                    if (table[i][j] != table[i + k][j]) {                        find5 = false;                    }                }                if (find5) {                    find = true;                    break;                }            }            if (find) {                break;            }        }        for (int i = 0; i < 19 - 4; i++) {            for (int j = 0; j < 19 - 4; j++) {                if (table[i][j] == null) {                    continue;                }                boolean find5 = true;                for (int k = 1; k < 5; k++) {                    if (table[i][j] != table[i + k][j + k]) {                        find5 = false;                    }                }                if (find5) {                    find = true;                    break;                }            }            if (find) {                break;            }        }        for (int i = 4; i < 19; i++) {            for (int j = 0; j < 19 - 4; j++) {                if (table[i][j] == null) {                    continue;                }                boolean find5 = true;                for (int k = 1; k < 5; k++) {                    if (table[i][j] != table[i - k][j + k]) {                        find5 = false;                    }                }                if (find5) {                    find = true;                    break;                }            }            if (find) {                break;            }        }        return find;    }    private void notifyObservers() {        for (final ModelObserver observer : observers) {            observer.modelChanged();        }    }    public void addObserver(final ModelObserver observer) {        observers.add(observer);    }}