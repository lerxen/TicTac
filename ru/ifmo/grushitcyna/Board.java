package ru.ifmo.grushitcyna;public class Board {    private NoughtsCrosses[][] table;    private int n;    public Board(int n) {        table = new NoughtsCrosses[n][n];        for (int i = 0; i < n; i++) {            for (int j = 0; j < n; j++) {                table[i][j] = null;            }        }        this.n = n;    }    public int size() {        return n;    }    public NoughtsCrosses getSymbol(int i, int j) {        return table[i][j];    }    public void setSymbol(NoughtsCrosses symbol, int i, int j) {        table[i][j] = symbol;    }    public void showTable() {        for (int j = 0; j < 19; j++) {            if (table[0][j] == null) {                System.out.print(". ");            } else System.out.print(table[0][j] + " ");        }        System.out.println();        for (int j = 0; j < 19; j++) {            if (table[1][j] == null) {                System.out.print(". ");            } else System.out.print(table[1][j] + " ");        }        System.out.println();        for (int j = 0; j < 19; j++) {            if (table[2][j] == null) {                System.out.print(". ");            } else System.out.print(table[2][j] + " ");        }        System.out.println();        for (int j = 0; j < 19; j++) {            if (table[3][j] == null) {                System.out.print(". ");            } else System.out.print(table[3][j] + " ");        }        System.out.println();        for (int j = 0; j < 19; j++) {            if (table[4][j] == null) {                System.out.print(". ");            } else System.out.print(table[4][j] + " ");        }        System.out.println();        for (int j = 0; j < 19; j++) {            if (table[5][j] == null) {                System.out.print(". ");            } else System.out.print(table[5][j] + " ");        }        System.out.println();        for (int j = 0; j < 19; j++) {            if (table[6][j] == null) {                System.out.print(". ");            } else System.out.print(table[6][j] + " ");        }        System.out.println();        for (int j = 0; j < 19; j++) {            if (table[7][j] == null) {                System.out.print(". ");            } else System.out.print(table[7][j] + " ");        }        System.out.println();        for (int j = 0; j < 19; j++) {            if (table[8][j] == null) {                System.out.print(". ");            } else System.out.print(table[8][j] + " ");        }        System.out.println();        for (int j = 0; j < 19; j++) {            if (table[9][j] == null) {                System.out.print(". ");            } else System.out.print(table[9][j] + " ");        }        System.out.println();        for (int j = 0; j < 19; j++) {            if (table[10][j] == null) {                System.out.print(". ");            } else System.out.print(table[10][j] + " ");        }        System.out.println();        for (int j = 0; j < 19; j++) {            if (table[11][j] == null) {                System.out.print(". ");            } else System.out.print(table[11] + " ");        }        System.out.println();        for (int j = 0; j < 19; j++) {            if (table[12][j] == null) {                System.out.print(". ");            } else System.out.print(table[12][j] + " ");        }        System.out.println();        for (int j = 0; j < 19; j++) {            if (table[13][j] == null) {                System.out.print(". ");            } else System.out.print(table[13][j] + " ");        }        System.out.println();        for (int j = 0; j < 19; j++) {            if (table[14][j] == null) {                System.out.print(". ");            } else System.out.print(table[14][j] + " ");        }        System.out.println();        for (int j = 0; j < 19; j++) {            if (table[15][j] == null) {                System.out.print(". ");            } else System.out.print(table[15][j] + " ");        }        System.out.println();        for (int j = 0; j < 19; j++) {            if (table[16][j] == null) {                System.out.print(". ");            } else System.out.print(table[16][j] + " ");        }        System.out.println();        for (int j = 0; j < 19; j++) {            if (table[17][j] == null) {                System.out.print(". ");            } else System.out.print(table[17][j] + " ");        }        System.out.println();        for (int j = 0; j < 19; j++) {            if (table[18][j] == null) {                System.out.print(". ");            } else System.out.print(table[18][j] + " ");        }    }    public boolean winner() {        boolean find = false;        for (int i = 0; i < 19; i++) {            for (int j = 0; j < 19 - 5; j++) {                if (table[i][j] == null) {                    continue;                }                boolean find5 = true;                for (int k = 1; k < 5; k++) {                    if (table[i][j] != table[i][j + k]) {                        find5 = false;                    }                }                if (find5) {                    find = true;                    break;                }            }            if (find) {                break;            }        }       // return find;        for (int i = 0; i < 19 - 5; i++) {            for (int j = 0; j < 19; j++) {                if (table[i][j] == null) {                    continue;                }                boolean find5 = true;                for (int k = 1; k < 5; k++) {                    if (table[i][j] != table[i + k][j]) {                        find5 = false;                    }                }                if (find5) {                    find = true;                    break;                }            }            if (find) {                break;            }        }       // return find;        for (int i = 0; i < 19 - 5; i++) {            for (int j = 0; j < 19 - 5; j++) {                if (table[i][j] == null) {                    continue;                }                boolean find5 = true;                for (int k = 1; k < 5; k++) {                    if (table[i][j] != table[i + k][j + k]) {                        find5 = false;                    }                }                if (find5) {                    find = true;                    break;                }            }            if (find) {                break;            }        }      //  return find;        for (int i = 4; i < 19; i++) {            for (int j = 0; j < 19 - 5; j++) {                if (table[i][j] == null) {                    continue;                }                boolean find5 = true;                for (int k = 1; k < 5; k++) {                    if (table[i][j] != table[i - k][j + k]) {                        find5 = false;                    }                }                if (find5) {                    find = true;                    break;                }            }            if (find) {                break;            }        }        return find;    }}